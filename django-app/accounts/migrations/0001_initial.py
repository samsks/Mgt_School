# Generated by Django 4.1.7 on 2023-03-15 07:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Owner", "School Owner"),
                            ("Teacher", "Teacher"),
                            ("Student", "Student"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "cpf",
                    models.BigIntegerField(
                        error_messages={"unique": "This C.P.F field must be unique."},
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("middle_name", models.CharField(max_length=128, null=True)),
                ("last_name", models.CharField(max_length=50)),
                (
                    "email",
                    models.EmailField(
                        error_messages={"unique": "This email field must be unique."},
                        max_length=127,
                        unique=True,
                    ),
                ),
                ("birthdate", models.DateField(null=True)),
                ("phone", models.BigIntegerField(null=True)),
                ("photo", models.CharField(max_length=255, null=True)),
                ("bio", models.TextField(null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "teacher_id",
                    models.UUIDField(editable=False, null=True, unique=True),
                ),
                ("major", models.CharField(max_length=50, null=True)),
                ("fired_at", models.DateField(null=True)),
                ("fired_reason", models.CharField(max_length=255, null=True)),
                (
                    "student_id",
                    models.UUIDField(editable=False, null=True, unique=True),
                ),
                (
                    "student_code",
                    models.CharField(
                        editable=False, max_length=20, null=True, unique=True
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("showed_up", models.BooleanField(default=False)),
                ("register_date", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ClassRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registered_at", models.DateField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "students_class_registration",
            },
        ),
        migrations.CreateModel(
            name="TestResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("test_grade", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"role": "Student"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_results",
                        to=settings.AUTH_USER_MODEL,
                        to_field="student_id",
                    ),
                ),
            ],
            options={
                "db_table": "students_test_results",
            },
        ),
    ]
